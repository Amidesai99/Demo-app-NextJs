{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amidesai/Downloads/NextJs_Websie/NextJs-Demo-Website/Demo-app-NextJs/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://newyorksimply.com/web-stories/things-to-do-central-park-nyc/\",\n    title: \"The first Meet\",\n    address: \"Central park,NYC\",\n    description: \"The meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Amidesai99:Divahottie99@cluster0.bcx3dbi.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Amidesai99:Divahottie99@cluster0.bcx3dbi.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupData: {\n        image: {},\n        id: meetupId,\n        title: \"The first Meet\",\n        address: \"Central park,NYC\",\n        description: \"The meetup description\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/amidesai/Downloads/NextJs_Websie/NextJs-Demo-Website/Demo-app-NextJs/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,EAAqBC,QAArB,QAAqC,SAArC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,SAASC,aAAT,GAAwB;AACpB,sBACI,QAAC,YAAD;AACA,IAAA,KAAK,EAAC,sEADN;AAEA,IAAA,KAAK,EAAC,gBAFN;AAGA,IAAA,OAAO,EAAC,kBAHR;AAIA,IAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;AACD,OAAO,eAAeC,cAAf,GAA+B;AAElC,QAAMC,MAAM,GAAC,MAAML,WAAW,CAACM,OAAZ,CAAoB,wGAApB,CAAnB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAGA,QAAMC,OAAO,GAAE,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAArB;AAIAR,EAAAA,MAAM,CAACS,KAAP;AAKA,SAAM;AACFC,IAAAA,QAAQ,EAAC,KADP;AAEFC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAW;AACzBC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAACF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAV;AADkB,KAAX,CAAZ;AAFJ,GAAN;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AACzC;AACA,QAAMH,QAAQ,GAAEG,OAAO,CAACJ,MAAR,CAAeC,QAA/B;AACA,QAAMf,MAAM,GAAC,MAAML,WAAW,CAACM,OAAZ,CAAoB,wGAApB,CAAnB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACnDb,IAAAA,GAAG,EAACX,QAAQ,CAACmB,QAAD;AADuC,GAA1B,CAA7B;AAIA,SAAM;AACFM,IAAAA,KAAK,EAAC;AACFC,MAAAA,UAAU,EAAC;AACPC,QAAAA,KAAK,EAAC,EADC;AAEPC,QAAAA,EAAE,EAACT,QAFI;AAGPU,QAAAA,KAAK,EAAC,gBAHC;AAIPC,QAAAA,OAAO,EAAC,kBAJD;AAKPC,QAAAA,WAAW,EAAC;AALL;AADT;AADJ,GAAN;AAYH;AAGD,eAAe7B,aAAf","sourcesContent":["import { MongoClient,ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nfunction MeetupDetails(){\n    return(\n        <MeetupDetail \n        image=\"https://newyorksimply.com/web-stories/things-to-do-central-park-nyc/\" \n        title=\"The first Meet\" \n        address=\"Central park,NYC\" \n        description=\"The meetup description\"/>\n        \n    );\n\n\n\n\n}\nexport async function getStaticPaths(){\n\n    const client=await MongoClient.connect(\"mongodb+srv://Amidesai99:Divahottie99@cluster0.bcx3dbi.mongodb.net/meetups?retryWrites=true&w=majority\");\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n\n    const meetups= await meetupsCollection.find({},{_id:1}).toArray();\n\n    \n\n    client.close();\n\n\n\n\n    return{\n        fallback:false,\n        paths:meetups.map((meetup)=>({\n            params:{meetupId:meetup._id.toString() },\n        })),\n    };\n}\n\nexport async function getStaticProps(context){\n    //fetch data for a single meetup\n    const meetupId= context.params.meetupId;\n    const client=await MongoClient.connect(\"mongodb+srv://Amidesai99:Divahottie99@cluster0.bcx3dbi.mongodb.net/meetups?retryWrites=true&w=majority\");\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollection.findOne({\n        _id:ObjectId(meetupId),\n    })\n\n    return{\n        props:{\n            meetupData:{\n                image:{} ,\n                id:meetupId,\n                title:\"The first Meet\" ,\n                address:\"Central park,NYC\" ,\n                description:\"The meetup description\"\n\n            }\n        }\n    }\n}\n\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}