{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amidesai/Downloads/NextJs_Websie/NextJs-Demo-Website/Demo-app-NextJs/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Amidesai99:Divahottie99@cluster0.bcx3dbi.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Amidesai99:Divahottie99@cluster0.bcx3dbi.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/amidesai/Downloads/NextJs_Websie/NextJs-Demo-Website/Demo-app-NextJs/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","Fragment","Head","MeetupDetail","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;AAAA,SAASA,WAAT,EAAqBC,QAArB,QAAqC,SAArC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAE,aAAZ;AAA0B,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAApD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKA,QAAC,YAAD;AACA,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADxB;AAEA,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFxB;AAGA,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH1B;AAIA,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJ9B;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;AACD,OAAO,eAAeG,cAAf,GAA+B;AAElC,QAAMC,MAAM,GAAC,MAAMb,WAAW,CAACc,OAAZ,CAAoB,wGAApB,CAAnB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAGA,QAAMC,OAAO,GAAE,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAArB;AAIAR,EAAAA,MAAM,CAACS,KAAP;AAKA,SAAM;AACFC,IAAAA,QAAQ,EAAC,KADP;AAEFC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAW;AACzBC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAACF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAV;AADkB,KAAX,CAAZ;AAFJ,GAAN;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AACzC;AACA,QAAMH,QAAQ,GAAEG,OAAO,CAACJ,MAAR,CAAeC,QAA/B;AACA,QAAMf,MAAM,GAAC,MAAMb,WAAW,CAACc,OAAZ,CAAoB,wGAApB,CAAnB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACnDb,IAAAA,GAAG,EAACnB,QAAQ,CAAC2B,QAAD;AADuC,GAA1B,CAA7B;AAIA,SAAM;AACFtB,IAAAA,KAAK,EAAC;AACFC,MAAAA,UAAU,EAAC;AACP2B,QAAAA,EAAE,EAACF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADI;AAEPrB,QAAAA,KAAK,EAACwB,cAAc,CAACxB,KAFd;AAGPG,QAAAA,OAAO,EAACqB,cAAc,CAACrB,OAHhB;AAIPD,QAAAA,KAAK,EAACsB,cAAc,CAACtB,KAJd;AAKPD,QAAAA,WAAW,EAACuB,cAAc,CAACvB;AALpB;AADT;AADJ,GAAN;AAWC;AAIL,eAAeJ,aAAf","sourcesContent":["import { MongoClient,ObjectId } from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nfunction MeetupDetails(props){\n    return(\n        <Fragment>\n            <Head>\n                <title>{props.meetupData.title}</title>\n                <meta name ='description' content={props.meetupData.description}/>\n            </Head>\n        <MeetupDetail \n        image={props.meetupData.image} \n        title={props.meetupData.title}\n        address={props.meetupData.address} \n        description={props.meetupData.description}\n        />\n        </Fragment>\n        \n    );\n\n\n\n\n}\nexport async function getStaticPaths(){\n\n    const client=await MongoClient.connect(\"mongodb+srv://Amidesai99:Divahottie99@cluster0.bcx3dbi.mongodb.net/meetups?retryWrites=true&w=majority\");\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n\n    const meetups= await meetupsCollection.find({},{_id:1}).toArray();\n\n    \n\n    client.close();\n\n\n\n\n    return{\n        fallback:false,\n        paths:meetups.map((meetup)=>({\n            params:{meetupId:meetup._id.toString() },\n        })),\n    };\n}\n\nexport async function getStaticProps(context){\n    //fetch data for a single meetup\n    const meetupId= context.params.meetupId;\n    const client=await MongoClient.connect(\"mongodb+srv://Amidesai99:Divahottie99@cluster0.bcx3dbi.mongodb.net/meetups?retryWrites=true&w=majority\");\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollection.findOne({\n        _id:ObjectId(meetupId),\n    })\n\n    return{\n        props:{\n            meetupData:{\n                id:selectedMeetup._id.toString(),\n                title:selectedMeetup.title,\n                address:selectedMeetup.address,\n                image:selectedMeetup.image,\n                description:selectedMeetup.description,\n            },\n            },\n        };\n    }\n\n\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}